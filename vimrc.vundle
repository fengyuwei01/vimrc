" vundlle.vim 
set nocompatible            
filetype off            

set runtimepath+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

" theme
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
" Plugin 'altercation/vim-colors-solarized'
Plugin 'tomasr/molokai'

" comment
Plugin 'scrooloose/nerdcommenter'

" useful search plugin!
Plugin 'ctrlpvim/ctrlp.vim'

" directory tree
Plugin 'scrooloose/nerdtree'

" go 
Plugin 'fatih/vim-go'

" YCM
Plugin 'Valloric/YouCompleteMe'

" template
Plugin 'fengzi01/smart-template.vim'
" TODO Plugin 'fengzi01/vim-common'

" awesome bookmark
Plugin 'MattesGroeger/vim-bookmarks'
" maximizer window 
Plugin 'szw/vim-maximizer'
" algin with = or :
Plugin 'godlygeek/tabular'
" markdown 
Plugin 'tpope/vim-markdown'
" close other buffer
Plugin 'vim-scripts/BufOnly.vim'
" snippet
Plugin 'SirVer/ultisnips'

call vundle#end()            
filetype plugin indent on  
"filetype plugin on
"
" :PluginList       - 列出所有已配置的插件
" :PluginInstall    - 安装插件,追加 `!` 用以更新或使用 :PluginUpdate
" :PluginSearch foo - 搜索 foo ; 追加 `!` 清除本地缓存
" :PluginClean      - 清除未使用插件,需要确认; 追加 `!` 自动批准移除未使用插件
"
" 查阅 :h vundle 获取更多细节和wiki以及FAQ

" plugin settings ---------------------- {{{

" scrooloose/nerdtree
nnoremap <leader>t :NERDTreeToggle<cr>
let NERDTreeHighlightCursorline=1 
let NERDTreeQuitOnOpen=1
let NERDTreeIgnore=[ '\.pyc$', '\.pyo$', '\.obj$', '\.o$', '\.so$', '\.egg$', '^\.git$', '^\.svn$', '^\.hg$' ]
"close vim if the only window left open is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | end

" ctrlpvim/ctrlp.vim
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_custom_ignore = {  
  \ 'dir':  '\v[\/]\.(git|hg|svn|output)$',  
  \ 'file': '\v\.(exe|so|dll|dmg|pdf|word|jpg|gif)$',  
  \ 'link': 'some_bad_symbolic_links',  
  \ }

" vim-airline
" let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline#extensions#tabline#buffer_nr_show = 1

" go 
let g:go_disable_autoinstall = 0

" ----------------------------------------------------------------------------
"  " vim-bookmarks
"  "TODO
"  ----------------------------------------------------------------------------
let g:bookmark_auto_save = 1
nnoremap mm :BookmarkToggle<CR>
nnoremap mi :BookmarkAnnotate<CR>
nnoremap ma :BookmarkShowAll<CR>
nnoremap mn :BookmarkNext<CR>
nnoremap mp :BookmarkPrev<CR>
nnoremap mc :BookmarkClear<CR>
nnoremap mx :BookmarkClearAll<CR>

" ----------------------------------------------------------------------------
" tabular
" ----------------------------------------------------------------------------
nmap <Leader>a= :Tabularize /=<CR>
nmap <Leader>a: :Tabularize /:<CR>
nmap <Leader>a" :Tabularize /"<CR>

" ----------------------------------------------------------------------------
"  " vim-maximizer                                                       
"  "
"  ----------------------------------------------------------------------------
nnoremap <tab> :MaximizerToggle<CR>

" ----------------------------------------------------------------------------
" BufOnly.vim
" ----------------------------------------------------------------------------
nnoremap <silent> qo :BufOnly<CR>

" ----------------------------------------------------------------------------
" ultisnips
" ----------------------------------------------------------------------------
let g:UltiSnipsExpandTrigger="<c-l>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" YouComleteMe
let g:ycm_error_symbol = '>>'
let g:ycm_warning_symbol = '>*'

let g:ycm_autoclose_preview_window_after_completion = 1
"let g:ycm_complete_in_strings = 1
let g:ycm_complete_in_comments = 1
let g:ycm_key_list_select_completion = ['<Tab>', '<C-j>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-k>', '<Up>']
let g:ycm_seed_identifiers_with_syntax = 1
let g:ycm_semantic_triggers =  {
            \   'c' : ['->', '.'],
            \   'objc' : ['->', '.'],
            \   'ocaml' : ['.', '#'],
            \   'cpp,objcpp' : ['->', '.', '::'],
            \   'perl' : ['->'],
            \   'php' : ['->', '::', '(', 'use ', 'namespace ', '\'],
            \   'cs,java,typescript,d,python,perl6,scala,vb,elixir,go' : ['.', 're!(?=[a-zA-Z]{3,4})'],
            \   'html': ['<', '"', '</', ' '],
            \   'vim' : ['re![_a-za-z]+[_\w]*\.'],
            \   'ruby' : ['.', '::'],
            \   'lua' : ['.', ':'],
            \   'erlang' : [':'],
            \   'haskell' : ['.', 're!.'],
            \   'scss,css': [ 're!^\s{2,4}', 're!:\s+' ],
            \ }

nnoremap <leader>gl :YcmCompleter GoToDeclaration<CR>
nnoremap <leader>gf :YcmCompleter GoToDefinition<CR>
nnoremap <leader>gg :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap <leader>gd :YcmDiags<CR>

"}}}

